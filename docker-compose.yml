services:
  neo4j:
    image: neo4j:5.2.0-community
    hostname: neo4j
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-plugins:/plugins
      - neo4-logs:/logs
      - neo4j-data:/data
      - ./data-dump:/dump
    networks:
      - network1
    environment:
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_AUTH: neo4j/neo4jpassword
      NEO4J_dbms_logs_debug_level: DEBUG
      NEO4J_dbms_connector_https_advertised__address: neo4j:7473
      NEO4J_dbms_connector_http_advertised__address: neo4j:7474
      NEO4J_dbms_connector_bolt_advertised__address: neo4j:7687
      NEO4J_server_default__listen__address: 0.0.0.0
    healthcheck:
      test: if (neo4j status | grep -q 'Neo4j is running');then exit 0 ;fi; exit 1;
      interval: 5s
      timeout: 10s
      retries: 20


  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-cache:/data
      - ./data-dump:/dump
    networks:
      - network1

  app:
    build:
      context: .
      args:
        NEO4J_URI_COMPOSE: bolt://host.docker.internal:7687
        NEO4J_PASSWORD_COMPOSE: neo4jpassword
        REDIS_HOST_COMPOSE: host.docker.internal
        REDIS_PORT_COMPOSE: 6379
    ports:
      - "6062:6062"
      - "8080:8080"
    depends_on:
      - "redis"
      - "neo4j"
    networks:
      - network1

volumes:
  redis-cache:
    external: true
  neo4j-data:
    external: true
  neo4-logs:
  neo4j-plugins:

networks:
  network1: